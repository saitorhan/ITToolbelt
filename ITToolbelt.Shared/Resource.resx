<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="001" xml:space="preserve">
    <value>Adı boş bırakılamaz</value>
  </data>
  <data name="002" xml:space="preserve">
    <value>Soyadı boş bırakılamaz</value>
  </data>
  <data name="003" xml:space="preserve">
    <value>Mail boş bırakılamaz</value>
  </data>
  <data name="004" xml:space="preserve">
    <value>Veri tabanı bağlantısı hatası</value>
  </data>
  <data name="005" xml:space="preserve">
    <value>Hata</value>
  </data>
  <data name="006" xml:space="preserve">
    <value>PASİF</value>
  </data>
  <data name="007" xml:space="preserve">
    <value>AKTİF</value>
  </data>
  <data name="008" xml:space="preserve">
    <value>Ayarların aktifleşmesi için uygulamanın yeniden başlatılması gerekmektedir. Şimdi yeniden başlatmak ister misiniz?</value>
  </data>
  <data name="009" xml:space="preserve">
    <value>Uyarı</value>
  </data>
  <data name="010" xml:space="preserve">
    <value>{0} silinecek, onaylıyor musunuz? Bu işlem geri alınamaz?</value>
  </data>
  <data name="011" xml:space="preserve">
    <value>Bütün indeksler pasif yapıldı.</value>
  </data>
  <data name="012" xml:space="preserve">
    <value>Bilgilendirme</value>
  </data>
  <data name="013" xml:space="preserve">
    <value>Bazı indekslerin pasif edilmesi sırasında hata oluştu.</value>
  </data>
  <data name="014" xml:space="preserve">
    <value>Hata</value>
  </data>
  <data name="015" xml:space="preserve">
    <value>Bağlantı ekleme</value>
  </data>
  <data name="016" xml:space="preserve">
    <value>başarılı</value>
  </data>
  <data name="017" xml:space="preserve">
    <value>başarısız</value>
  </data>
  <data name="018" xml:space="preserve">
    <value>Başarılı</value>
  </data>
  <data name="019" xml:space="preserve">
    <value>Hata</value>
  </data>
  <data name="020" xml:space="preserve">
    <value>ARTAN</value>
  </data>
  <data name="021" xml:space="preserve">
    <value>AZALAN</value>
  </data>
  <data name="022" xml:space="preserve">
    <value>Adı alanı en fazla 50 karakter olabilir.</value>
  </data>
  <data name="023" xml:space="preserve">
    <value>Soyadı alanı en fazla 50 karakter olabilir.</value>
  </data>
  <data name="024" xml:space="preserve">
    <value>Mail alanı en fazla 100 karakter olabilir.</value>
  </data>
  <data name="025" xml:space="preserve">
    <value>Bu kullanıcı adı daha önce kullanılmış.</value>
  </data>
  <data name="026" xml:space="preserve">
    <value>İşlem başarılı.</value>
  </data>
  <data name="027" xml:space="preserve">
    <value>Kullanıcı adı boş bırakılamaz</value>
  </data>
  <data name="028" xml:space="preserve">
    <value>Kullanıcı adı alanı en fazla 50 karakter olabilir.</value>
  </data>
  <data name="029" xml:space="preserve">
    <value>İşlem başarısız.</value>
  </data>
  <data name="030" xml:space="preserve">
    <value>Açıklama alanı en fazla 500 karakter olabilir</value>
  </data>
  <data name="031" xml:space="preserve">
    <value>Bu grup adı daha önce kaydedilmiş</value>
  </data>
  <data name="032" xml:space="preserve">
    <value>Bu bilgisayar adı daha önce kaydedilmiş</value>
  </data>
  <data name="033" xml:space="preserve">
    <value>{0} bilgisayarından {1} isimli kullanıcı kaldırılacak. Bu işlem geri alınamaz. Onaylıyor musunuz?</value>
  </data>
  <data name="034" xml:space="preserve">
    <value>Uygulama adı boş bırakılamaz</value>
  </data>
  <data name="035" xml:space="preserve">
    <value>Uygulama adı en fazla 100 karakter olabilir</value>
  </data>
  <data name="036" xml:space="preserve">
    <value>Uygulama yayınlayıcısı boş bırakılamaz</value>
  </data>
  <data name="037" xml:space="preserve">
    <value>Uygulama versiyonu boş bırakılamaz</value>
  </data>
  <data name="038" xml:space="preserve">
    <value>Uygulama mimarisi boş bırakılamaz</value>
  </data>
  <data name="039" xml:space="preserve">
    <value>Uygulama yayıncısı en fazla 100 karakter olabilir</value>
  </data>
  <data name="040" xml:space="preserve">
    <value>Uygulama versiyonu en fazla 20 karakter olabilir</value>
  </data>
  <data name="041" xml:space="preserve">
    <value>Uygulama mimarisi "32 Bit" veya "64 Bit" olabilir</value>
  </data>
</root>